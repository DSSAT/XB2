package xbuild;

import DSSATModel.TillageImplementList;
import Extensions.Variables;
import FileXModel.FileX;
import FileXModel.ModelXBase;
import FileXModel.Tillage;
import FileXModel.TillageApplication;
import java.awt.EventQueue;
import java.awt.event.FocusListener;
import java.awt.event.WindowEvent;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import xbuild.Components.IXInternalFrame;
import xbuild.Events.MenuDirection;
import xbuild.Events.NewFrameEvent;
import xbuild.Events.UpdateLevelEvent;

/**
 *
 * @author Jazzy
 */
public class TillageFrame extends IXInternalFrame {

    protected Tillage tillage;
    private int selectedRowIndex = -1;
    private Integer level;
    /**
     * Creates new form TillageFrame
     * @param nodeName
     */
    public TillageFrame(String nodeName) {
        initComponents();
        
        for(ModelXBase til : FileX.tillageList.GetAll()){
            int nodeLevel = getLevel(nodeName);
            String nodeDesc = getDescription(nodeName);
            
            if(til.GetLevel() == nodeLevel && til.GetName().equals(nodeDesc)){   
                level = nodeLevel;
                this.tillage = (Tillage)til;
            }
        }

        LoadTillage();
        
        lblLevel.setText("Level " + level.toString());
        txtDescription.Init(tillage, "TNAME", tillage.TNAME);
        
        rdDaysAfterPlanting.addChangeListener((javax.swing.event.ChangeEvent evt) -> {
            rdDaysAfterPlantingStateChanged(evt);
        });
        
        EventQueue.invokeLater(() -> {
            rdDaysAfterPlantingStateChanged(null);
            
            rdDaysAfterPlanting.setEnabled(!FileX.isFileOpenned || tillage.GetSize() == 0);
            rdReportedDates.setEnabled(!FileX.isFileOpenned || tillage.GetSize() == 0);
        });
        
        setImage(imagePanel, "Tillage2.jpg");
    }
    
    private void rdDaysAfterPlantingStateChanged(javax.swing.event.ChangeEvent evt) {                                                 
        if(rdDaysAfterPlanting.isSelected())
        {
            TableColumn col = jXTable1.getColumn(0);
            col.setHeaderValue("Days After Planting");
            if(tillage.GetApps() != null){
                tillage.GetApps().forEach(h -> {
                    h.TDATE = null;
                });
            }
        }
        else
        {
            TableColumn col = jXTable1.getColumn(0);
            col.setHeaderValue("<html><p align='center'>Date<br>" + Variables.getDateFormatString() + "</p></html>");
            if(tillage.GetApps() != null){
                tillage.GetApps().forEach(harvest -> {
                    harvest.TDAY = null;
                });
            }
        }        
    }
    
    /**
     *
     * @param name
     */
    @Override
    public void updatePanelName(String name){
        FocusListener[] listens = txtDescription.getListeners(FocusListener.class);
        for(FocusListener li : listens)
            txtDescription.removeFocusListener(li);
        
        level = 0;
        for (ModelXBase f : FileX.tillageList.GetAll()) {
            level++;
            if(getLevel(name) == level){                
                lblLevel.setText("Level " + level.toString());
                txtDescription.setText(getDescription(name));
                break;
            }
        }
        
        for(FocusListener li : listens)
            this.addFocusListener(li);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        lblLevel = new org.jdesktop.swingx.JXLabel();
        txtDescription = new xbuild.Components.XTextField();
        jXPanel1 = new org.jdesktop.swingx.JXPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jXTable1 = new org.jdesktop.swingx.JXTable();
        imagePanel = new javax.swing.JLabel();
        bnAddLayer = new javax.swing.JButton();
        bnDeleteLayer = new javax.swing.JButton();
        jXLabel2 = new org.jdesktop.swingx.JXLabel();
        rdDaysAfterPlanting = new javax.swing.JRadioButton();
        rdReportedDates = new javax.swing.JRadioButton();
        lblLevel1 = new org.jdesktop.swingx.JXLabel();
        bnPrevious = new javax.swing.JButton();
        bnNext = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        lblLevel.setText("Level");
        lblLevel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        txtDescription.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDescriptionFocusLost(evt);
            }
        });

        jXPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jXTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Day", "Tillage Implement", "Tillage Depth"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jXTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jXTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jXTable1);

        imagePanel.setBackground(new java.awt.Color(153, 153, 153));

        bnAddLayer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Plus.png"))); // NOI18N
        bnAddLayer.setText("Add Application");
        bnAddLayer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bnAddLayerActionPerformed(evt);
            }
        });

        bnDeleteLayer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Minus.png"))); // NOI18N
        bnDeleteLayer.setText("Delete Application");
        bnDeleteLayer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bnDeleteLayerActionPerformed(evt);
            }
        });

        jXLabel2.setText("Management");

        buttonGroup1.add(rdDaysAfterPlanting);
        rdDaysAfterPlanting.setSelected(true);
        rdDaysAfterPlanting.setText("Days After Planting");

        buttonGroup1.add(rdReportedDates);
        rdReportedDates.setText("On Reported Dates");

        javax.swing.GroupLayout jXPanel1Layout = new javax.swing.GroupLayout(jXPanel1);
        jXPanel1.setLayout(jXPanel1Layout);
        jXPanel1Layout.setHorizontalGroup(
            jXPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jXPanel1Layout.createSequentialGroup()
                .addGroup(jXPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jXPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jXPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jXPanel1Layout.createSequentialGroup()
                                .addComponent(bnAddLayer)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bnDeleteLayer))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 822, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(imagePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jXPanel1Layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(jXLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(rdDaysAfterPlanting)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rdReportedDates)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jXPanel1Layout.setVerticalGroup(
            jXPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jXPanel1Layout.createSequentialGroup()
                .addGroup(jXPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jXPanel1Layout.createSequentialGroup()
                        .addGroup(jXPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jXPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jXPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jXLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jXPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(rdDaysAfterPlanting)
                                        .addComponent(rdReportedDates))))
                            .addGroup(jXPanel1Layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addGroup(jXPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(bnAddLayer)
                                    .addComponent(bnDeleteLayer))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 499, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jXPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(imagePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        lblLevel1.setText("Tillage");
        lblLevel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        bnPrevious.setText("PREVIOUS");
        bnPrevious.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bnPreviousActionPerformed(evt);
            }
        });

        bnNext.setText("NEXT");
        bnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bnNextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jXPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 593, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblLevel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bnPrevious)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bnNext)))
                .addGap(0, 30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bnPrevious)
                    .addComponent(bnNext))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblLevel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jXPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bnAddLayerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bnAddLayerActionPerformed
        TillageApplication til;
        if (selectedRowIndex >= 0 && selectedRowIndex < tillage.GetSize()) {
            TillageApplication tmp = tillage.GetApp(selectedRowIndex);
            til = tmp.Clone();
        } else {
            til = new TillageApplication();
        }

        final TillageDialog tilDialog = new TillageDialog(null, true, rdDaysAfterPlanting.isSelected(), til);
        tilDialog.show();

        tilDialog.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                TillageApplication tilApp = tilDialog.GetData();
                if(tilApp != null){
                    DefaultTableModel model = (DefaultTableModel) jXTable1.getModel();

                    while(model.getRowCount() > 0)
                        model.removeRow(0);
                    
                    tillage.AddApp(tilApp);
                    
                    for (int i = 0; i < tillage.GetSize(); i++) {                        
                        model.addRow(SetRow(tillage.GetApp(i)));
                    }

                    
                }
                tilDialog.SetNull();
            }
        });
    }//GEN-LAST:event_bnAddLayerActionPerformed

    private void bnDeleteLayerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bnDeleteLayerActionPerformed
        int nRow = jXTable1.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) jXTable1.getModel();
        model.removeRow(nRow);

        tillage.RemoveAt(nRow);
        
        EventQueue.invokeLater(() -> {
            rdDaysAfterPlantingStateChanged(null);
            
            rdDaysAfterPlanting.setEnabled(!FileX.isFileOpenned || tillage.GetSize() == 0);
            rdReportedDates.setEnabled(!FileX.isFileOpenned || tillage.GetSize() == 0);
        });
    }//GEN-LAST:event_bnDeleteLayerActionPerformed

    private void jXTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jXTable1MouseClicked
        if(evt.getClickCount() == 2)
        {
            final TillageDialog tilDialog = new TillageDialog(null, true, rdDaysAfterPlanting.isSelected(), tillage.GetApp(jXTable1.getSelectedRow()));
            tilDialog.show();

            tilDialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosed(WindowEvent e) {
                    TillageApplication tilApp = tilDialog.GetData();
                    if(tilApp != null){
                        DefaultTableModel model = (DefaultTableModel) jXTable1.getModel();
                        Object[] row = SetRow(tilApp);
                        for(int n = 0;n < row.length;n++)
                            model.setValueAt(row[n], jXTable1.getSelectedRow(), n);
                    }
                    tilDialog.SetNull();
                }
            });
        }
        else {
            int nRow = jXTable1.getSelectedRow();

            if(nRow != selectedRowIndex){
                selectedRowIndex = nRow;
            }
            else{
                selectedRowIndex = -1;
                jXTable1.clearSelection();
            }
        }
    }//GEN-LAST:event_jXTable1MouseClicked

    private void txtDescriptionFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDescriptionFocusLost
        if(txtDescription.getText() == null ? tillage.TNAME != null : !txtDescription.getText().equals(tillage.TNAME)){
            l.myAction(new UpdateLevelEvent(this, "Tillage", "Level " + level + ": " + txtDescription.getText(), level - 1));
        }
    }//GEN-LAST:event_txtDescriptionFocusLost

    private void bnPreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bnPreviousActionPerformed
        EventQueue.invokeLater(() -> {
            l.myAction(new NewFrameEvent(this, "Tillage", MenuDirection.PREVIOUS));
        });
    }//GEN-LAST:event_bnPreviousActionPerformed

    private void bnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bnNextActionPerformed
        EventQueue.invokeLater(() -> {
            l.myAction(new NewFrameEvent(this, "Tillage", MenuDirection.NEXT));
        });
    }//GEN-LAST:event_bnNextActionPerformed

    private Object[] SetRow(TillageApplication tilApp) {
        Object day;
        Object TIMPL;
        Object TDEP;
        try
        {
            day = Variables.getDateFormat().format(tilApp.TDATE);
        }
        catch(Exception ex)
        {
            day = tilApp.TDAY.toString();
        }

        try
        {
            TIMPL = TillageImplementList.GetAt(tilApp.TIMPL).Description;
        }
        catch(Exception ex) {
            TIMPL = "";
        }
        try
        {
            TDEP = tilApp.TDEP;
        }
        catch(Exception ex) {
            TDEP = "";
        }

        return new Object[] {day, TIMPL, TDEP};
    }

    private void LoadTillage() {

        DefaultTableModel model = (DefaultTableModel) jXTable1.getModel();
        for(int i = 0;i < tillage.GetSize();i++)
        {
            if(tillage.GetApp(i).TDATE != null){
                rdReportedDates.setSelected(true);
            }else{
                rdDaysAfterPlanting.setSelected(true);
            }
            model.addRow(SetRow(tillage.GetApp(i)));
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bnAddLayer;
    private javax.swing.JButton bnDeleteLayer;
    private javax.swing.JButton bnNext;
    private javax.swing.JButton bnPrevious;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel imagePanel;
    private javax.swing.JScrollPane jScrollPane1;
    private org.jdesktop.swingx.JXLabel jXLabel2;
    private org.jdesktop.swingx.JXPanel jXPanel1;
    private org.jdesktop.swingx.JXTable jXTable1;
    private org.jdesktop.swingx.JXLabel lblLevel;
    private org.jdesktop.swingx.JXLabel lblLevel1;
    private javax.swing.JRadioButton rdDaysAfterPlanting;
    private javax.swing.JRadioButton rdReportedDates;
    private xbuild.Components.XTextField txtDescription;
    // End of variables declaration//GEN-END:variables
}
