/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * TreatmentFrame.java
 *
 * Created on Mar 18, 2010, 11:17:05 PM
 */

package xbuild;

import FileXModel.Treatment;
import FileXModel.FileX;
import FileXDialog.CultivarDialog;
import FileXDialog.FieldDialog;
import java.awt.Color;
import java.awt.Point;
import java.awt.event.WindowEvent;
import java.awt.event.WindowFocusListener;
import java.awt.event.WindowListener;
import javax.swing.JDialog;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Jazzy
 */
public class TreatmentFrame extends javax.swing.JInternalFrame {

    /** Creates new form TreatmentFrame */
    public TreatmentFrame() {
        initComponents();

        LoadTreament();

        TableModel tbModel1 = jXTable1.getModel();
        tbModel1.addTableModelListener(new TableModelListener() {

            public void tableChanged(TableModelEvent e) {
                int col = e.getColumn();
                if(col != 1) return;

                int row = e.getFirstRow();

                DefaultTableModel tbModel = (DefaultTableModel) jXTable1.getModel();
                FileX.treaments.GetAt(row).TNAME = (String)tbModel.getValueAt(row, col);
            }
        });
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bnAddLayer = new javax.swing.JButton();
        bnDeleteLayer = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jXTable1 = new org.jdesktop.swingx.JXTable();

        setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        setPreferredSize(new java.awt.Dimension(767, 677));

        bnAddLayer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Plus.png"))); // NOI18N
        bnAddLayer.setText("Add");
        bnAddLayer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bnAddLayerActionPerformed(evt);
            }
        });

        bnDeleteLayer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Minus.png"))); // NOI18N
        bnDeleteLayer.setText("Delete");
        bnDeleteLayer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bnDeleteLayerActionPerformed(evt);
            }
        });

        jXTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Level", "Description", "Cultivar", "Field", "<html>Soil<br>Anal.<html>", "<html>Init.<br>Cond.<html>", "Plant", "Irrigat.", "Fertil.", "Resid.", "<html><p align='center'>Chem<br>App.</p></html>", "Tillage", "<html><p align='center'>Env.<br>Mod</p></html>", "Harvest", "<html><p align='center'>Sim.<br>Contr.</p></html>"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jXTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jXTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jXTable1);
        jXTable1.getColumnModel().getColumn(0).setPreferredWidth(50);
        jXTable1.getColumnModel().getColumn(1).setPreferredWidth(70);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 765, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 745, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bnAddLayer)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bnDeleteLayer)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 650, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bnAddLayer)
                    .addComponent(bnDeleteLayer))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 581, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jXTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jXTable1MouseClicked
        //JOptionPane.showMessageDialog(null, "Col = " + jXTable1.getSelectedColumn() + " : Row = " + jXTable1.getSelectedRow());
        int row = jXTable1.getSelectedRow();

        if(row > jXTable1.getRowCount());
        int col = jXTable1.getSelectedColumn();

        //jXTable1.getColumnModel().getColumn(col).getWidth();
        Point p = jXTable1.getLocationOnScreen();
        
        for(int i = 0;i < col;i++)
            p.x += jXTable1.getColumnModel().getColumn(i).getWidth();

        p.y += (row + 1) * jXTable1.getRowHeight();
        

        if(col == 2) ShowCultivar(col, row, p);
        else if(col == 3) ShowField(col, row, p);
        else if(col == 4) ShowSoilAnalysis(col, row, p);
        else if(col == 5) ShowInitial(col, row, p);
        else if(col == 6) ShowPlant(col, row, p);
        else if(col == 7) ShowIrrigation(col, row, p);
        else if(col == 8) ShowFertilizer(col, row, p);
        else if(col == 9) ShowOrganic(col, row, p);
        else if(col == 10) ShowChemical(col, row, p);
        else if(col == 11) ShowTillage(col, row, p);
        else if(col == 12) ShowEnvironment(col, row, p);
        else if(col == 13) ShowHarvest(col, row, p);
        else if(col == 14) ShowSimulation(col, row, p);
    }//GEN-LAST:event_jXTable1MouseClicked

    private void bnAddLayerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bnAddLayerActionPerformed
        DefaultTableModel tbModel = (DefaultTableModel) jXTable1.getModel();
        
        int row = jXTable1.getSelectedRow();
        Treatment treatment = new Treatment();
        if(row >= 0){
            treatment.TNAME = tbModel.getValueAt(row, 1).toString();
            treatment.CU = (int)tbModel.getValueAt(row, 2);
            treatment.FL = (int)tbModel.getValueAt(row, 3);
            treatment.SA = (int)tbModel.getValueAt(row, 4);
            treatment.IC = (int)tbModel.getValueAt(row, 5);
            treatment.MP = (int)tbModel.getValueAt(row, 6);
            treatment.MI = (int)tbModel.getValueAt(row, 7);
            treatment.MF = (int)tbModel.getValueAt(row, 8);
            treatment.MR = (int)tbModel.getValueAt(row, 9);
            treatment.MC = (int)tbModel.getValueAt(row, 10);
            treatment.MT = (int)tbModel.getValueAt(row, 11);
            treatment.ME = (int)tbModel.getValueAt(row, 12);
            treatment.MH = (int)tbModel.getValueAt(row, 13);
            treatment.SM = (int)tbModel.getValueAt(row, 14);
            
            tbModel.addRow(new Object[] {jXTable1.getRowCount()+1, 
                treatment.TNAME, treatment.CU, treatment.FL, treatment.SA, treatment.IC, treatment.MP, treatment.MI, 
                treatment.MF, treatment.MR, treatment.MC, treatment.MT, treatment.ME, treatment.MH, treatment.SM});
        }
        else{
            tbModel.addRow(new Object[] {jXTable1.getRowCount()+1, "", "", "", "", "", "", "", "", "", "", "", "", "", ""});
        }
        

        FileX.treaments.AddNew(treatment);
    }//GEN-LAST:event_bnAddLayerActionPerformed

    private void bnDeleteLayerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bnDeleteLayerActionPerformed
        DefaultTableModel tbModel = (DefaultTableModel) jXTable1.getModel();
        int row = jXTable1.getSelectedRow();
        tbModel.removeRow(row);
        FileX.treaments.RemoveAt(row);

        for(int i = row; i < jXTable1.getRowCount();i++)
            tbModel.setValueAt(i + 1, i, 0);
    }//GEN-LAST:event_bnDeleteLayerActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bnAddLayer;
    private javax.swing.JButton bnDeleteLayer;
    private javax.swing.JScrollPane jScrollPane1;
    private org.jdesktop.swingx.JXTable jXTable1;
    // End of variables declaration//GEN-END:variables

    private void ShowCultivar(final int col, final int row, Point p) {
        final CultivarDialog dialog = new CultivarDialog();
        dialog.setLocation(p);
        dialog.show();
        
        dialog.addWindowFocusListener(new WindowFocusListener() {

            public void windowGainedFocus(WindowEvent e) {

            }

            public void windowLostFocus(WindowEvent e) {
                dialog.dispose();
            }
        });

        dialog.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                DefaultTableModel tbModel = (DefaultTableModel) jXTable1.getModel();
                Integer level = dialog.GetLevel();
                if(level != null){
                    tbModel.setValueAt(level, row, col);
                    FileX.treaments.GetAt(row).CU = level;
                }
            }
        });
    }

    private void ShowField(final int col, final int row, Point p) {
        final FieldDialog dialog = new FieldDialog();
        dialog.setLocation(p);
        dialog.show();

        dialog.addWindowFocusListener(new WindowFocusListener() {

            public void windowGainedFocus(WindowEvent e) {

            }

            public void windowLostFocus(WindowEvent e) {
                dialog.dispose();
            }
        });

        dialog.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                DefaultTableModel tbModel = (DefaultTableModel) jXTable1.getModel();
                Integer level = dialog.GetLevel();
                if(level != null){
                    tbModel.setValueAt(level, row, col);
                    FileX.treaments.GetAt(row).FL = level;
                }
            }
        });
    }

    private void ShowSoilAnalysis(final int col, final int row, Point p) {
        final FileXDialog.SoilAnalysisDialog dialog = new FileXDialog.SoilAnalysisDialog();
        dialog.setLocation(p);
        dialog.show();

        dialog.addWindowFocusListener(new WindowFocusListener() {

            public void windowGainedFocus(WindowEvent e) {

            }

            public void windowLostFocus(WindowEvent e) {
                dialog.dispose();
            }
        });

        dialog.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                DefaultTableModel tbModel = (DefaultTableModel) jXTable1.getModel();
                Integer level = dialog.GetLevel();
                if(level != null){
                    tbModel.setValueAt(level, row, col);
                    FileX.treaments.GetAt(row).SA = level;
                }
            }
        });
    }

    private void ShowInitial(final int col, final int row, Point p) {
        final FileXDialog.InitialDialog dialog = new FileXDialog.InitialDialog();
        dialog.setLocation(p);
        dialog.show();

        dialog.addWindowFocusListener(new WindowFocusListener() {

            public void windowGainedFocus(WindowEvent e) {

            }

            public void windowLostFocus(WindowEvent e) {
                dialog.dispose();
            }
        });

        dialog.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                DefaultTableModel tbModel = (DefaultTableModel) jXTable1.getModel();
                Integer level = dialog.GetLevel();
                if(level != null){
                    tbModel.setValueAt(level, row, col);
                    FileX.treaments.GetAt(row).IC = level;
                }
            }
        });
    }

    private void ShowSimulation(final int col, final int row, Point p) {
        final FileXDialog.SimulationDialog dialog = new FileXDialog.SimulationDialog();
        dialog.setLocation(p);
        dialog.show();

        dialog.addWindowFocusListener(new WindowFocusListener() {

            public void windowGainedFocus(WindowEvent e) {

            }

            public void windowLostFocus(WindowEvent e) {
                dialog.dispose();
            }
        });

        dialog.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                DefaultTableModel tbModel = (DefaultTableModel) jXTable1.getModel();
                Integer level = dialog.GetLevel();
                if(level != null){
                    tbModel.setValueAt(level, row, col);
                    FileX.treaments.GetAt(row).SM = level;
                }
            }
        });
    }

    private void ShowHarvest(final int col, final int row, Point p) {
        final FileXDialog.HarvestlDialog dialog = new FileXDialog.HarvestlDialog();
        dialog.setLocation(p);
        dialog.show();

        dialog.addWindowFocusListener(new WindowFocusListener() {

            public void windowGainedFocus(WindowEvent e) {

            }

            public void windowLostFocus(WindowEvent e) {
                dialog.dispose();
            }
        });

        dialog.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                DefaultTableModel tbModel = (DefaultTableModel) jXTable1.getModel();
                Integer level = dialog.GetLevel();
                if(level != null){
                    tbModel.setValueAt(level, row, col);
                    FileX.treaments.GetAt(row).MH = level;
                }
            }
        });
    }

    private void ShowEnvironment(final int col, final int row, Point p) {
        final FileXDialog.EnvironmentalDialog dialog = new FileXDialog.EnvironmentalDialog();
        dialog.setLocation(p);
        dialog.show();

        dialog.addWindowFocusListener(new WindowFocusListener() {

            public void windowGainedFocus(WindowEvent e) {

            }

            public void windowLostFocus(WindowEvent e) {
                dialog.dispose();
            }
        });

        dialog.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                DefaultTableModel tbModel = (DefaultTableModel) jXTable1.getModel();
                Integer level = dialog.GetLevel();
                if(level != null){
                    tbModel.setValueAt(level, row, col);
                    FileX.treaments.GetAt(row).ME = level;
                }
            }
        });
    }

    private void ShowTillage(final int col, final int row, Point p) {
        final FileXDialog.TillageDialog dialog = new FileXDialog.TillageDialog();
        dialog.setLocation(p);
        dialog.show();

        dialog.addWindowFocusListener(new WindowFocusListener() {

            public void windowGainedFocus(WindowEvent e) {

            }

            public void windowLostFocus(WindowEvent e) {
                dialog.dispose();
            }
        });

        dialog.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                DefaultTableModel tbModel = (DefaultTableModel) jXTable1.getModel();
                Integer level = dialog.GetLevel();
                if(level != null){
                    tbModel.setValueAt(level, row, col);
                    FileX.treaments.GetAt(row).MT = level;
                }
            }
        });
    }

    private void ShowChemical(final int col, final int row, Point p) {
        final FileXDialog.ChemicalDialog dialog = new FileXDialog.ChemicalDialog();
        dialog.setLocation(p);
        dialog.show();

        dialog.addWindowFocusListener(new WindowFocusListener() {

            public void windowGainedFocus(WindowEvent e) {

            }

            public void windowLostFocus(WindowEvent e) {
                dialog.dispose();
            }
        });

        dialog.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                DefaultTableModel tbModel = (DefaultTableModel) jXTable1.getModel();
                Integer level = dialog.GetLevel();
                if(level != null){
                    tbModel.setValueAt(level, row, col);
                    FileX.treaments.GetAt(row).MC = level;
                }
            }
        });
    }

    private void ShowOrganic(final int col, final int row, Point p) {
        final FileXDialog.OrganicDialog dialog = new FileXDialog.OrganicDialog();
        dialog.setLocation(p);
        dialog.show();

        dialog.addWindowFocusListener(new WindowFocusListener() {

            public void windowGainedFocus(WindowEvent e) {

            }

            public void windowLostFocus(WindowEvent e) {
                dialog.dispose();
            }
        });

        dialog.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                DefaultTableModel tbModel = (DefaultTableModel) jXTable1.getModel();
                Integer level = dialog.GetLevel();
                if(level != null){
                    tbModel.setValueAt(level, row, col);
                    FileX.treaments.GetAt(row).MR = level;
                }
            }
        });
    }

    private void ShowFertilizer(final int col, final int row, Point p) {
        final FileXDialog.FertilizerDialog dialog = new FileXDialog.FertilizerDialog();
        dialog.setLocation(p);
        dialog.show();

        dialog.addWindowFocusListener(new WindowFocusListener() {

            public void windowGainedFocus(WindowEvent e) {

            }

            public void windowLostFocus(WindowEvent e) {
                dialog.dispose();
            }
        });

        dialog.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                DefaultTableModel tbModel = (DefaultTableModel) jXTable1.getModel();
                Integer level = dialog.GetLevel();
                if(level != null){
                    tbModel.setValueAt(level, row, col);
                    FileX.treaments.GetAt(row).MF = level;
                }
            }
        });
    }

    private void ShowIrrigation(final int col, final int row, Point p) {
        final FileXDialog.IrrigationDialog dialog = new FileXDialog.IrrigationDialog();
        dialog.setLocation(p);
        dialog.show();

        dialog.addWindowFocusListener(new WindowFocusListener() {

            public void windowGainedFocus(WindowEvent e) {

            }

            public void windowLostFocus(WindowEvent e) {
                dialog.dispose();
            }
        });

        dialog.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                DefaultTableModel tbModel = (DefaultTableModel) jXTable1.getModel();
                Integer level = dialog.GetLevel();
                if(level != null){
                    tbModel.setValueAt(level, row, col);
                    FileX.treaments.GetAt(row).MI = level;
                }
            }
        });
    }

    private void ShowPlant(final int col, final int row, Point p) {
        final FileXDialog.PlantingDialog dialog = new FileXDialog.PlantingDialog();
        dialog.setLocation(p);
        dialog.show();

        dialog.addWindowFocusListener(new WindowFocusListener() {

            public void windowGainedFocus(WindowEvent e) {

            }

            public void windowLostFocus(WindowEvent e) {
                dialog.dispose();
            }
        });

        dialog.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                DefaultTableModel tbModel = (DefaultTableModel) jXTable1.getModel();
                Integer level = dialog.GetLevel();
                if(level != null){
                    tbModel.setValueAt(level, row, col);
                    FileX.treaments.GetAt(row).MP = level;
                }
            }
        });
    }

    private void LoadTreament() {
        DefaultTableModel tbModel = (DefaultTableModel) jXTable1.getModel();
        for(int i = 0;i < FileX.treaments.GetSize();i++)
        {
            Treatment treatment = FileX.treaments.GetAt(i);
            Object row[] = new Object[15];
            row[0] = i + 1;
            try {
                row[1] = treatment.TNAME;
            } catch (Exception e) {
                row[1] = "";
            }
            try {
                row[2] = treatment.CU;
            } catch (Exception e) {
                row[2] = "";
            }
            try {
                row[3] = treatment.FL;
            } catch (Exception e) {
                row[3] = "";
            }
            try {
                row[4] = treatment.SA;
            } catch (Exception e) {
                row[4] = "";
            }
            try {
                row[5] = treatment.IC;
            } catch (Exception e) {
                row[5] = "";
            }
            try {
                row[6] = treatment.MP;
            } catch (Exception e) {
                row[6] = "";
            }
            try {
                row[7] = treatment.MI;
            } catch (Exception e) {
                row[7] = "";
            }
            try {
                row[8] = treatment.MF;
            } catch (Exception e) {
                row[8] = "";
            }
            try {
                row[9] = treatment.MR;
            } catch (Exception e) {
                row[9] = "";
            }
            try {
                row[10] = treatment.MC;
            } catch (Exception e) {
                row[10] = "";
            }
            try {
                row[11] = treatment.MT;
            } catch (Exception e) {
                row[11] = "";
            }
            try {
                row[12] = treatment.ME;
            } catch (Exception e) {
                row[12] = "";
            }
            try {
                row[13] = treatment.MH;
            } catch (Exception e) {
                row[13] = "";
            }
            try {
                row[14] = treatment.SM;
            } catch (Exception e) {
                row[14] = "";
            }
            tbModel.addRow(row);
        }
    }

}
