/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FertilizerPanel.java
 *
 * Created on Mar 12, 2010, 4:32:39 PM
 */

package xbuild;

import FileXModel.FertilizerApplication;
import FileXModel.Fertilizer;
import FileXModel.FileX;
import DSSATModel.FertilizerMaterialList;
import DSSATModel.FertilizerMethodList;
import java.awt.event.WindowEvent;
import java.text.SimpleDateFormat;
import java.util.Locale;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author Jazzy
 */
public class FertilizerPanel extends javax.swing.JPanel {

    /** Creates new form FertilizerPanel */
    protected Fertilizer fertil;
    private int selectedRowIndex = -1;
    
    public FertilizerPanel(Fertilizer fertil) {
        initComponents();

        this.fertil = fertil;

        LoadFertilizer();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jXLabel1 = new org.jdesktop.swingx.JXLabel();
        jXLabel2 = new org.jdesktop.swingx.JXLabel();
        rdDaysAfterPlanting = new javax.swing.JRadioButton();
        rdReportedDates = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jXTable1 = new org.jdesktop.swingx.JXTable();
        bnAddLayer = new javax.swing.JButton();
        bnDeleteLayer = new javax.swing.JButton();
        txtYear = new javax.swing.JTextField();

        setPreferredSize(new java.awt.Dimension(742, 613));

        jXLabel1.setText("Year");

        jXLabel2.setText("Management");

        buttonGroup1.add(rdDaysAfterPlanting);
        rdDaysAfterPlanting.setSelected(true);
        rdDaysAfterPlanting.setText("Days After Planting");
        rdDaysAfterPlanting.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rdDaysAfterPlantingItemStateChanged(evt);
            }
        });

        buttonGroup1.add(rdReportedDates);
        rdReportedDates.setText("On Reported Dates");

        jXTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Day", "<html><p align='center'>Fertilizer<br>Material</p></html>", "<html><p align='center'>Fertilizer<br>Applications</p></html>", "<html><p align='center'>Depth<br>cm</p></html>", "<html><p align='center'>N<br>kg ha-1</p></html>", "<html><p align='center'>P<br>kg ha-1</p></html>", "<html><p align='center'>K<br>kg ha-1</p></html>", "<html><p align='center'>Ca<br>kg ha-1</p></html>", "<html><p align='center'>Other<br>elements<br>kg ha-1</p></html>", "<html> <table width='100%'><tr><td align='center'> Other<br>Element<br>Code</td></tr></table> </html>"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jXTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jXTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jXTable1);
        jXTable1.getColumnModel().getColumn(0).setPreferredWidth(80);
        jXTable1.getColumnModel().getColumn(1).setPreferredWidth(150);
        jXTable1.getColumnModel().getColumn(2).setPreferredWidth(150);
        jXTable1.getColumnModel().getColumn(3).setPreferredWidth(60);
        jXTable1.getColumnModel().getColumn(4).setPreferredWidth(60);
        jXTable1.getColumnModel().getColumn(5).setPreferredWidth(60);
        jXTable1.getColumnModel().getColumn(6).setPreferredWidth(60);
        jXTable1.getColumnModel().getColumn(7).setPreferredWidth(60);
        jXTable1.getColumnModel().getColumn(8).setPreferredWidth(70);
        jXTable1.getColumnModel().getColumn(9).setPreferredWidth(70);

        bnAddLayer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Plus.png"))); // NOI18N
        bnAddLayer.setText("Add Layer");
        bnAddLayer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bnAddLayerActionPerformed(evt);
            }
        });

        bnDeleteLayer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Minus.png"))); // NOI18N
        bnDeleteLayer.setText("Delete Layer");
        bnDeleteLayer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bnDeleteLayerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(97, 97, 97)
                .addComponent(jXLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtYear, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(536, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 722, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(49, 49, 49)
                            .addComponent(jXLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(rdDaysAfterPlanting)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(rdReportedDates)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 113, Short.MAX_VALUE)
                            .addComponent(bnAddLayer)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(bnDeleteLayer)))
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jXLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(582, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(12, 12, 12)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(21, 21, 21)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(rdDaysAfterPlanting)
                                .addComponent(rdReportedDates)
                                .addComponent(jXLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(46, 46, 46)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(bnDeleteLayer)
                                .addComponent(bnAddLayer))))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 495, Short.MAX_VALUE)
                    .addGap(13, 13, 13)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void bnAddLayerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bnAddLayerActionPerformed
        FertilizerApplication fer = null;
        if (selectedRowIndex > 0 && selectedRowIndex < fertil.GetSize()) {
            FertilizerApplication tmp = fertil.GetApp(selectedRowIndex);
            fer = tmp.Clone();
        } else {
            fer = new FertilizerApplication();
        }
        
        final FertilizerDialog ferDialog = new FertilizerDialog(null, true, rdDaysAfterPlanting.isSelected(), fer);
        ferDialog.show();

        ferDialog.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                FertilizerApplication ferApp = ferDialog.GetData();
                if(ferApp != null){
                    DefaultTableModel model = (DefaultTableModel) jXTable1.getModel();

                    model.addRow(SetRow(ferApp));

                    fertil.AddApp(ferApp);
                }
                ferDialog.SetNull();
            }
        });
    }//GEN-LAST:event_bnAddLayerActionPerformed

    private void jXTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jXTable1MouseClicked
        if(evt.getClickCount() == 2)
        {
            final FertilizerDialog ferDialog = new FertilizerDialog(null, true, rdDaysAfterPlanting.isSelected(), fertil.GetApp(jXTable1.getSelectedRow()));
            ferDialog.show();

            ferDialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosed(WindowEvent e) {
                    FertilizerApplication ferApp = ferDialog.GetData();
                    if(ferApp != null){
                        DefaultTableModel model = (DefaultTableModel) jXTable1.getModel();
                        Vector vector = SetRow(ferApp);
                        for(int n = 0;n < vector.size();n++)
                            model.setValueAt(vector.get(n), jXTable1.getSelectedRow(), n);
                    }
                    ferDialog.SetNull();
                }
            });
        }
        else{
            int nRow = jXTable1.getSelectedRow();
            
            if(nRow != selectedRowIndex){
                selectedRowIndex = nRow;
            }
            else{
                selectedRowIndex = -1;
                jXTable1.clearSelection();
            }
        }
    }//GEN-LAST:event_jXTable1MouseClicked

    private void bnDeleteLayerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bnDeleteLayerActionPerformed
        int nRow = jXTable1.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) jXTable1.getModel();
        model.removeRow(nRow);

        fertil.RemoveAt(nRow);
    }//GEN-LAST:event_bnDeleteLayerActionPerformed

    private void rdDaysAfterPlantingItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rdDaysAfterPlantingItemStateChanged
        if(rdDaysAfterPlanting.isSelected())
        {
            TableColumn col = jXTable1.getColumn(0);
            col.setHeaderValue("Day");
        }
        else
        {
            TableColumn col = jXTable1.getColumn(0);
            col.setHeaderValue("Date");
        }
        DefaultTableModel model = (DefaultTableModel)jXTable1.getModel();
        for(int i = 0;i < model.getRowCount();i++)
            model.setValueAt("", i, 0);
    }//GEN-LAST:event_rdDaysAfterPlantingItemStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bnAddLayer;
    private javax.swing.JButton bnDeleteLayer;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JScrollPane jScrollPane1;
    private org.jdesktop.swingx.JXLabel jXLabel1;
    private org.jdesktop.swingx.JXLabel jXLabel2;
    private org.jdesktop.swingx.JXTable jXTable1;
    private javax.swing.JRadioButton rdDaysAfterPlanting;
    private javax.swing.JRadioButton rdReportedDates;
    private javax.swing.JTextField txtYear;
    // End of variables declaration//GEN-END:variables

    private void LoadFertilizer() {
        txtYear.setText(FileX.general.Year);

        DefaultTableModel model = (DefaultTableModel) jXTable1.getModel();
        for(int i = 0;i < fertil.GetSize();i++)
        {
            model.addRow(SetRow(fertil.GetApp(i)));
        }
    }

    private Vector SetRow(FertilizerApplication ferApp) {

        Vector vector = new Vector();
        try
        {
            Locale l = new Locale("en", "US");
            SimpleDateFormat df = new SimpleDateFormat("dd/MM/yyyy", l);
            vector.addElement(df.format(ferApp.FDATE));

            rdDaysAfterPlanting.setSelected(false);
            rdReportedDates.setSelected(true);
        }
        catch(Exception ex)
        {
            vector.add(ferApp.FDAY);
            rdDaysAfterPlanting.setSelected(true);
            rdReportedDates.setSelected(false);
        }
        /*
        if(rdDaysAfterPlanting.isSelected())
            vector.add(ferApp.FDAY);
        else
        {
            Locale l = new Locale("en", "US");
            SimpleDateFormat df = new SimpleDateFormat("dd/MM/yyyy", l);
            vector.addElement(df.format(ferApp.FDATE));
        }
         *
         */

        try
        {
            vector.add(FertilizerMaterialList.GetAt(ferApp.FMCD).Description);
        }
        catch(Exception ex) {
            vector.add("");
        }
        try
        {
            vector.add(FertilizerMethodList.GetAt(ferApp.FACD).Description);
        }
        catch(Exception ex) {
            vector.add("");
        }
        try
        {
            vector.add(ferApp.FDEP);
        }
        catch(Exception ex) {
            vector.add("");
        }
        try
        {
            vector.add(ferApp.FAMN);
        }
        catch(Exception ex) {
            vector.add("");
        }
        try
        {
            vector.add(ferApp.FAMP);
        }
        catch(Exception ex) {
            vector.add("");
        }
        try
        {
            vector.add(ferApp.FAMK);
        }
        catch(Exception ex) {
            vector.add("");
        }
        try
        {
            vector.add(ferApp.FAMC);
        }
        catch(Exception ex) {
            vector.add("");
        }
        try
        {
            vector.add(ferApp.FAMO);
        }
        catch(Exception ex) {
            vector.add("");
        }
        try
        {
            vector.add(ferApp.FOCD);
        }
        catch(Exception ex) {
            vector.add("");
        }

        return vector;
    }

}
